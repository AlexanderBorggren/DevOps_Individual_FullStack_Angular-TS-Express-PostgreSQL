name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Run unit tests
        run: npm run test:unit

      - name: Run integration tests
        run: npm run test:integration

      - name: Install GitHub CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y gh

      - name: Authenticate GitHub CLI
        run: echo ${{ secrets.GITHUB_TOKEN }} | gh auth login --with-token

      - name: Set up versioning
        run: |
          echo "VERSION=1.0.${{ github.run_number }}" >> $GITHUB_ENV
          echo "TAG=borggren4/app_image:${{ env.VERSION }}" >> $GITHUB_ENV
          echo "SERVER_TAG=borggren4/server_image:${{ env.VERSION }}" >> $GITHUB_ENV

      - name: Login to Docker Hub
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Set up Docker Buildx
        run: |
          docker run --privileged --rm tonistiigi/binfmt --install all
          docker buildx create --use

      - name: Debug TAG value
        run: echo "TAG=${{ env.TAG }}"

      - name: Build and push Docker image
        run: |
          docker buildx build --platform linux/amd64 -t ${{ env.TAG }} -f dockerfile_app . --push
          docker buildx build --platform linux/amd64 -t ${{ env.SERVER_TAG }} -f dockerfile_server . --push

      - name: Create GitHub Release
        id: create_release
        run: |
          gh release create "${{ env.VERSION }}" \
            --title "Release ${{ env.VERSION }}" \
            --notes "Automated release for version ${{ env.VERSION }}" \
            --generate-notes \
            --draft

      - name: Notify Render
        run: |
          curl -X POST "https://api.render.com/deploy/srv-crsoq3l2ng1s73bqvt40?key=${{ secrets.RENDER_DEPLOY_KEY_APP }}"
          curl -X POST "https://api.render.com/deploy/srv-crsh30ogph6c738ten30?key=${{ secrets.RENDER_DEPLOY_KEY_SERVER }}"
